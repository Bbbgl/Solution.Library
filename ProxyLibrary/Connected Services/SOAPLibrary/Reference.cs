//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proxy.Library.SOAPLibrary {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/SOAPService.Library")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model.Library")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/Model.Library")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorSurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublishingHouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorSurname {
            get {
                return this.AuthorSurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorSurnameField, value) != true)) {
                    this.AuthorSurnameField = value;
                    this.RaisePropertyChanged("AuthorSurname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublishingHouse {
            get {
                return this.PublishingHouseField;
            }
            set {
                if ((object.ReferenceEquals(this.PublishingHouseField, value) != true)) {
                    this.PublishingHouseField = value;
                    this.RaisePropertyChanged("PublishingHouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SOAPLibrary.IServiceLibrary")]
    public interface IServiceLibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetData", ReplyAction="http://tempuri.org/IServiceLibrary/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceLibrary/GetDataUsingDataContractResponse")]
        Proxy.Library.SOAPLibrary.CompositeType GetDataUsingDataContract(Proxy.Library.SOAPLibrary.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/Login", ReplyAction="http://tempuri.org/IServiceLibrary/LoginResponse")]
        Proxy.Library.SOAPLibrary.User Login(BusinessLogic.Library.ViewModels.LoginViewModel lvm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/AddBook", ReplyAction="http://tempuri.org/IServiceLibrary/AddBookResponse")]
        void AddBook(ConsoleApp.Library.Options.AddingBookViewModel BVM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/SearchBook", ReplyAction="http://tempuri.org/IServiceLibrary/SearchBookResponse")]
        System.Collections.Generic.List<Proxy.Library.SOAPLibrary.Book> SearchBook(Proxy.Library.SOAPLibrary.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/SearchBookWithAvailabilityInfos", ReplyAction="http://tempuri.org/IServiceLibrary/SearchBookWithAvailabilityInfosResponse")]
        System.Collections.Generic.List<BusinessLogic.Library.ViewModels.SearchingBookViewModel> SearchBookWithAvailabilityInfos(BusinessLogic.Library.BookViewModel bvm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/UpdateBook", ReplyAction="http://tempuri.org/IServiceLibrary/UpdateBookResponse")]
        void UpdateBook(int bookId, Proxy.Library.SOAPLibrary.Book bookWithNewValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/DeleteBook", ReplyAction="http://tempuri.org/IServiceLibrary/DeleteBookResponse")]
        bool DeleteBook(BusinessLogic.Library.BookViewModel bvm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/ReserveBookPROVA", ReplyAction="http://tempuri.org/IServiceLibrary/ReserveBookPROVAResponse")]
        BusinessLogic.Library.ViewModels.ReservationResult ReserveBookPROVA(int bookId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/ReserveBook", ReplyAction="http://tempuri.org/IServiceLibrary/ReserveBookResponse")]
        void ReserveBook(int bookId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/BookReturn", ReplyAction="http://tempuri.org/IServiceLibrary/BookReturnResponse")]
        BusinessLogic.Library.ViewModels.ReservationResult BookReturn(int bookId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetReservationHistory", ReplyAction="http://tempuri.org/IServiceLibrary/GetReservationHistoryResponse")]
        System.Collections.Generic.List<BusinessLogic.Library.ViewModels.ReservationViewModel> GetReservationHistory(System.Nullable<int> bookId, System.Nullable<int> userId, System.Nullable<BusinessLogic.Library.ViewModels.ReservationStatus> reservationStatus);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceLibraryChannel : Proxy.Library.SOAPLibrary.IServiceLibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceLibraryClient : System.ServiceModel.ClientBase<Proxy.Library.SOAPLibrary.IServiceLibrary>, Proxy.Library.SOAPLibrary.IServiceLibrary {
        
        public ServiceLibraryClient() {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public Proxy.Library.SOAPLibrary.CompositeType GetDataUsingDataContract(Proxy.Library.SOAPLibrary.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public Proxy.Library.SOAPLibrary.User Login(BusinessLogic.Library.ViewModels.LoginViewModel lvm) {
            return base.Channel.Login(lvm);
        }
        
        public void AddBook(ConsoleApp.Library.Options.AddingBookViewModel BVM) {
            base.Channel.AddBook(BVM);
        }
        
        public System.Collections.Generic.List<Proxy.Library.SOAPLibrary.Book> SearchBook(Proxy.Library.SOAPLibrary.Book book) {
            return base.Channel.SearchBook(book);
        }
        
        public System.Collections.Generic.List<BusinessLogic.Library.ViewModels.SearchingBookViewModel> SearchBookWithAvailabilityInfos(BusinessLogic.Library.BookViewModel bvm) {
            return base.Channel.SearchBookWithAvailabilityInfos(bvm);
        }
        
        public void UpdateBook(int bookId, Proxy.Library.SOAPLibrary.Book bookWithNewValues) {
            base.Channel.UpdateBook(bookId, bookWithNewValues);
        }
        
        public bool DeleteBook(BusinessLogic.Library.BookViewModel bvm) {
            return base.Channel.DeleteBook(bvm);
        }
        
        public BusinessLogic.Library.ViewModels.ReservationResult ReserveBookPROVA(int bookId, int userId) {
            return base.Channel.ReserveBookPROVA(bookId, userId);
        }
        
        public void ReserveBook(int bookId, int userId) {
            base.Channel.ReserveBook(bookId, userId);
        }
        
        public BusinessLogic.Library.ViewModels.ReservationResult BookReturn(int bookId, int userId) {
            return base.Channel.BookReturn(bookId, userId);
        }
        
        public System.Collections.Generic.List<BusinessLogic.Library.ViewModels.ReservationViewModel> GetReservationHistory(System.Nullable<int> bookId, System.Nullable<int> userId, System.Nullable<BusinessLogic.Library.ViewModels.ReservationStatus> reservationStatus) {
            return base.Channel.GetReservationHistory(bookId, userId, reservationStatus);
        }
    }
}
